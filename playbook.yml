---
- name: Provision and Configure Docker
  hosts: blue_server
  become: true
  tasks:
    - name: Check if Docker is installed
      command: docker --version
      register: docker_version
      ignore_errors: yes
      changed_when: false

    - name: Copy Dockerfile to different copies
      copy:
        src: /path/to/your/Dockerfile
        dest: /path/to/target/location/Dockerfile
      when: docker_version.rc == 0

    - name: Install Docker if not available
      block:
        - name: Install prerequisites for Docker
          apt:
            name:
              - ca-certificates
              - curl
              - gnupg
            update_cache: yes

        - name: Install Docker GPG key
          command: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/docker.gpg

        - name: Configure Docker repository
          copy:
            content: |
              deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
            dest: /etc/apt/sources.list.d/docker.list
          notify: Update package cache

        - name: Update package cache (apt-get update)
          apt:
            update_cache: yes

        - name: Install Docker packages
          apt:
            name:
              - docker-ce
              - docker-ce-cli
              - containerd.io
              - docker-buildx-plugin
              - docker-compose-plugin
            state: latest

        - name: Specify Docker version string
          set_fact:
            VERSION_STRING: "5:24.0.0-1~ubuntu.22.04~jammy"

        - name: Install specific Docker version
          apt:
            name: "docker-ce={{ VERSION_STRING }} docker-ce-cli={{ VERSION_STRING }} containerd.io docker-buildx-plugin docker-compose-plugin"
            state: present

        - name: Start Docker service
          service:
            name: docker
            state: started

      when: docker_version.rc != 0

    - name: Login to Docker Hub
      shell: docker login -u your_username -p your_password
      when: docker_version.rc == 0

    - name: Pull Docker image
      docker_image:
        name: your-docker-image:tag
        state: present
      with_sequence: start=8701 end=8710
      loop_control:
        loop_var: port

    - name: Run Docker container
      docker_container:
        name: your-container-name-{{ port }}
        image: your-docker-image:tag
        ports:
          - "{{ port }}:80"
      with_sequence: start=8701 end=8710
      loop_control:
        loop_var: port
